{"version":3,"sources":["ChordFinder/PadSelect.js","ChordFinder/NoteSelect.js","ChordFinder/ChordTypeSelect.js","ChordFinder/Pads.js","ChordFinder/CollectionActions.js","ChordFinder/Collection.js","App.js","serviceWorker.js","index.js"],"names":["PadSelect","React","Component","render","createElement","aria-label","value","this","props","className","onChange","changeNumberOfPads","NoteSelect","changeRootNote","ChordTypeSelect","changeChordType","Pads","numberOfPads","currentChord","pads","notes","teoria","scale","i","note","activeClass","name","forEach","noteOfCurrentChord","chroma","accidental","push","length","sortedPads","Array","from","pad","index","key","CollectionActions","onClick","addChordToCollection","Link","to","collection","join","disabled","clearChordCollection","generateRandomChordCollection","Collection","componentDidMount","window","scrollTo","gtag","location","hash","trackClipboardCopy","exportAsJPG","shadowValue","document","querySelectorAll","style","boxShadow","chordCollection","querySelector","html2canvas","useCORS","allowTaint","backgroundColor","then","canvas","imgData","toDataURL","link","download","href","body","appendChild","click","removeChild","chords","urlParts","split","chordsNames","pop","parseInt","chordName","chord","e","Redirect","Fragment","Clipboard","data-clipboard-text","component","App","constructor","super","state","rootNote","chordType","bind","target","setState","scales","Scale","KNOWN_SCALES","scaleName","Math","floor","random","chordProgression","teoriaChordProgression","getChords","HashRouter","basename","Switch","Route","path","exact","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.2e38058a.chunk.js","sourcesContent":["import React from 'react';\n\nexport default class PadSelect extends React.Component {\n  render() {\n    return (\n      <select\n        aria-label=\"Select 12 or 16 pads\"\n        value={this.props.value}\n        className=\"form-control\"\n        onChange={this.props.changeNumberOfPads}>\n        <option value=\"16\">16 pads</option>\n        <option value=\"12\">12 pads</option>\n      </select>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class NoteSelect extends React.Component {\n  render() {\n    return (\n      <select\n        aria-label=\"Select a root note\"\n        value={this.props.value}\n        className=\"form-control\"\n        onChange={this.props.changeRootNote}>\n        <option value=\"C\" className=\"active\">C</option>\n        <option value=\"C#\">C# (Db)</option>\n        <option value=\"D\">D</option>\n        <option value=\"D#\">D# (Eb)</option>\n        <option value=\"E\">E</option>\n        <option value=\"F\">F</option>\n        <option value=\"F#\">F# (Gb)</option>\n        <option value=\"G\">G</option>\n        <option value=\"G#\">G# (Ab)</option>\n        <option value=\"A\">A</option>\n        <option value=\"A#\">A# (Bb)</option>\n        <option value=\"B\">B</option>\n      </select>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class ChordTypeSelect extends React.Component {\n  render() {\n    return (\n      <select\n        aria-label=\"Select a chord type\"\n        value={this.props.value}\n        className=\"form-control\"\n        onChange={this.props.changeChordType}>\n        <option value=\"\">maj</option>\n        <option value=\"maj7\">maj7</option>\n        <option value=\"maj7b5\">maj7b5</option>\n        <option value=\"maj7#5\">maj7#5</option>\n        <option value=\"min\">min</option>\n        <option value=\"min7\">min7</option>\n        <option value=\"min7b5\">min7b5</option>\n        <option value=\"min7#5\">min7#5</option>\n        <option value=\"min6\">min6</option>\n        <option value=\"mmaj7\">mmaj7</option>\n        <option value=\"6\">6</option>\n        <option value=\"7\">7</option>\n        <option value=\"7b5\">7b5</option>\n        <option value=\"7#5\">7#5</option>\n        <option value=\"7sus4\">7sus4</option>\n        <option value=\"aug\">aug</option>\n        <option value=\"dim\">dim</option>\n        <option value=\"dim7\">dim7</option>\n        <option value=\"5\">5</option>\n        <option value=\"sus2\">sus2</option>\n        <option value=\"sus4\">sus4</option>\n        <option value=\"sus2sus4\">sus2sus4</option>\n      </select>\n    );\n  }\n}\n","import React from 'react';\nimport teoria from 'teoria';\n\nexport default class Pads extends React.Component {\n  render() {\n    const numberOfPads = this.props.numberOfPads;\n    const currentChord = this.props.currentChord;\n    const pads = [];\n    let notes = teoria.scale('c', 'chromatic').notes();\n    for (let i = 0; i < 16; i++) {\n      let a = i % 12;\n      let note = notes[a];\n\n      let activeClass = '';\n      let name = '';\n      currentChord.notes().forEach(function (noteOfCurrentChord) {\n        if (note.chroma() === noteOfCurrentChord.chroma()) {\n          activeClass = 'active';\n          name = noteOfCurrentChord.name() + noteOfCurrentChord.accidental();\n        }\n      });\n      pads.push({\n        name: name,\n        chroma: note.chroma(),\n        activeClass: activeClass,\n      });\n      if (12 === numberOfPads && 0 === (i + 1) % 3) {\n        pads.push({});\n      }\n      if (16 === pads.length) {\n        break;\n      }\n    }\n    let sortedPads = [\n      pads[12], pads[13], pads[14], pads[15],\n      pads[8], pads[9], pads[10], pads[11],\n      pads[4], pads[5], pads[6], pads[7],\n      pads[0], pads[1], pads[2], pads[3],\n    ];\n\n    return (\n      <div className={'row pads pads-' + numberOfPads}>\n        {Array.from(sortedPads, (pad, index) =>\n          <div className={'col col-3 pad-container'} key={index}>\n            <div className=\"embed-responsive embed-responsive-1by1 text-center\">\n              <div className={'embed-responsive-item pad ' + pad.activeClass}>\n                <span className=\"pad-name align-middle\">\n                  {pad.name}\n                </span>\n              </div>\n            </div>\n          </div>,\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default class CollectionActions extends React.Component {\n  render() {\n    return (\n      <div className=\"row\">\n        <div className=\"col col-12\">\n          <button\n            className=\"btn btn-block text-left\"\n            onClick={this.props.addChordToCollection}>\n            Add chord to collection\n          </button>\n          <Link to={'/collection/' + this.props.numberOfPads + '/' + this.props.collection.join('-')}>\n            <button\n              className='btn btn-block text-left'\n              disabled={0 === this.props.collection.length}>\n              Show chord-collection ({this.props.collection.length})\n            </button>\n          </Link>\n          <button\n            className=\"btn btn-block text-left\"\n            disabled={0 === this.props.collection.length}\n            onClick={this.props.clearChordCollection}>\n            Clear chord-collection\n          </button>\n          <button\n            className=\"btn btn-block text-left\"\n            onClick={this.props.generateRandomChordCollection}>\n            Generate random collection\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport teoria from 'teoria';\nimport Clipboard from 'react-clipboard.js';\nimport html2canvas from 'html2canvas';\n\nimport Pads from './Pads';\n\nclass Collection extends React.Component {\n  componentDidMount() {\n    window.scrollTo(0, 0);\n    window.gtag('event', 'view', {\n      'event_category': 'showCollection',\n      'event_label': window.location.hash,\n    });\n  }\n\n  trackClipboardCopy() {\n    window.gtag('event', 'button-clicked', {\n      'event_category': 'copyCollectionToClipboard',\n      'event_label': window.location.hash,\n    });\n  }\n\n  exportAsJPG() {\n    window.gtag('event', 'button-clicked', {\n      'event_category': 'exportAsJPG',\n      'event_label': window.location.hash,\n    });\n    const pads = document.querySelectorAll('.pad');\n    const shadowValue = pads[0].style.boxShadow;\n    document.querySelectorAll('.pad').forEach((pad) => {\n      pad.style.boxShadow = 'none';\n    });\n    const chordCollection = document.querySelector('.container.collection');\n    html2canvas(chordCollection, {\n      useCORS: true,\n      allowTaint: true,\n      backgroundColor: '#3862fd',\n    })\n      .then(canvas => {\n        const imgData = canvas.toDataURL('image/jpeg', 0.5);\n        const link = document.createElement('a');\n        link.download = 'mpc-chord-collection';\n        link.href = imgData;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        document.querySelectorAll('.pad').forEach((pad) => {\n          pad.style.boxShadow = shadowValue;\n        });\n      });\n  }\n\n  render() {\n    let chords = [];\n    try {\n      let urlParts = window.location.href.split('/');\n      let chordsNames = urlParts.pop().split('-');\n      var numberOfPads = parseInt(urlParts.pop());\n      chordsNames.forEach(function (chordName) {\n        let chord = teoria.chord(chordName);\n        chords.push(chord);\n      });\n    } catch (e) {\n      return <Redirect to={'/'} />;\n    }\n    return (\n      <React.Fragment>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col col-12\">\n              <h2>MPC-Chords ({chords.length})</h2>\n            </div>\n          </div>\n          <div className=\"row actions\">\n            <div className=\"col col-12\">\n              <Link to={'/'}>\n                <button className=\"btn btn-block text-left back\">\n                  Back to the Chord-Finder-App\n                </button>\n              </Link>\n              <Clipboard\n                data-clipboard-text={window.location.href}\n                className=\"btn btn-block text-left\"\n                onClick={this.trackClipboardCopy}\n                component=\"button\">\n                Copy collection-URL to clipboard\n              </Clipboard>\n              <button className=\"btn btn-block text-left mb-0\" onClick={this.exportAsJPG}>\n                Export collection as JPG-Image\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"container collection\">\n          {Array.from(chords, (chord, index) =>\n            <div className={'chord'} key={index}>\n              <div className=\"row\">\n                <div className=\"col col-12\">\n                  <h3>{chord.name}</h3>\n                </div>\n              </div>\n              <Pads\n                key={index}\n                currentChord={chord}\n                numberOfPads={numberOfPads}\n              />\n            </div>,\n          )}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Collection;\n","import React from 'react';\nimport { Route, Switch, HashRouter, Redirect } from 'react-router-dom';\n\nimport teoria, { Scale } from 'teoria';\nimport teoriaChordProgression from 'teoria-chord-progression';\n\nimport PadSelect from './ChordFinder/PadSelect';\nimport NoteSelect from './ChordFinder/NoteSelect';\nimport ChordTypeSelect from './ChordFinder/ChordTypeSelect';\nimport Pads from './ChordFinder/Pads';\nimport CollectionActions from './ChordFinder/CollectionActions';\nimport Collection from './ChordFinder/Collection';\n\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      numberOfPads: 16,\n      rootNote: 'C',\n      chordType: '',\n      collection: [],\n    };\n    this.changeNumberOfPads = this.changeNumberOfPads.bind(this);\n    this.changeRootNote = this.changeRootNote.bind(this);\n    this.changeChordType = this.changeChordType.bind(this);\n    this.addChordToCollection = this.addChordToCollection.bind(this);\n    this.clearChordCollection = this.clearChordCollection.bind(this);\n    this.generateRandomChordCollection = this.generateRandomChordCollection.bind(this);\n  }\n\n  changeNumberOfPads(e) {\n    window.gtag('event', 'select-changed', {\n      'event_category': 'changeNumberOfPads',\n      'event_label': e.target.value,\n    });\n    this.setState({ numberOfPads: parseInt(e.target.value) });\n  }\n\n  changeRootNote(e) {\n    window.gtag('event', 'select-changed', {\n      'event_category': 'changeRootNote',\n      'event_label': e.target.value,\n    });\n    this.setState({ rootNote: e.target.value });\n  }\n\n  changeChordType(e) {\n    window.gtag('event', 'select-changed', {\n      'event_category': 'changeChordType',\n      'event_label': e.target.value,\n    });\n    this.setState({ chordType: e.target.value });\n  }\n\n  addChordToCollection() {\n    window.gtag('event', 'button-clicked', {\n      'event_category': 'addChordToCollection',\n      'event_label': this.state.rootNote + this.state.chordType,\n    });\n    this.state.collection.push(this.state.rootNote + this.state.chordType);\n    this.setState({ collection: this.state.collection });\n  }\n\n  clearChordCollection() {\n    window.gtag('event', 'button-clicked', {\n      'event_category': 'clearChordCollection',\n    });\n    this.setState({ collection: [] });\n  }\n\n  generateRandomChordCollection() {\n    try {\n      const scales = Scale.KNOWN_SCALES;\n      const scaleName = scales[Math.floor(Math.random() * scales.length)];\n      const notes = teoria.scale('c', 'chromatic').notes();\n      const note = notes[Math.floor(Math.random() * notes.length)];\n      const scale = teoria.scale(note.name(), scaleName);\n      const chordProgression = teoriaChordProgression(scale, [2, 5, 1], 4);\n      let collection = [];\n      chordProgression.getChords().forEach((chord) => {\n        collection.push(chord.name);\n      });\n      window.gtag('event', 'button-clicked', {\n        'event_category': 'generateRandomChordCollection',\n        'event_label': collection.join('-'),\n      });\n      this.setState({ collection });\n    } catch (e) {\n      //just keep on trying\n      this.generateRandomChordCollection();\n    }\n  }\n\n  render() {\n    const currentChord = teoria.chord(this.state.rootNote + this.state.chordType);\n    const numberOfPads = this.state.numberOfPads;\n    const collection = this.state.collection;\n    return (\n      <HashRouter basename='/'>\n        <Switch>\n          <Route path={'/collection/:pads/:chords'} exact component={Collection} />\n          <Route path={'/'} exact>\n            <div className=\"App\">\n              <div className=\"container\">\n                <div className=\"row\">\n                  <div className=\"col col-12\">\n                    <h2>MPC-Chord-Finder</h2>\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col col-12\">\n                    <PadSelect changeNumberOfPads={this.changeNumberOfPads} value={this.state.numberOfPads} />\n                    <NoteSelect changeRootNote={this.changeRootNote} value={this.state.rootNote} />\n                    <ChordTypeSelect changeChordType={this.changeChordType} value={this.state.chordType} />\n                  </div>\n                </div>\n              </div>\n              <div className=\"container pads\">\n                <Pads\n                  numberOfPads={numberOfPads}\n                  currentChord={currentChord}>\n                </Pads>\n              </div>\n              <div className=\"container\">\n                <p></p>\n                <CollectionActions\n                  addChordToCollection={this.addChordToCollection}\n                  clearChordCollection={this.clearChordCollection}\n                  generateRandomChordCollection={this.generateRandomChordCollection}\n                  numberOfPads={numberOfPads}\n                  collection={collection}>\n                </CollectionActions>\n              </div>\n            </div>\n          </Route>\n          <Route path=\"*\">\n            <Redirect to={'/'} />\n          </Route>\n        </Switch>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}