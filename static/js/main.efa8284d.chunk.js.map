{"version":3,"sources":["ChordFinder/PadSelect.js","ChordFinder/NoteSelect.js","ChordFinder/ChordTypeSelect.js","ChordFinder/Pads.js","ChordFinder/CollectionActions.js","ChordFinder/Collection.js","App.js","serviceWorker.js","index.js"],"names":["PadSelect","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","React","createElement","aria-label","this","props","className","onChange","changeNumberOfPads","Component","NoteSelect","changeRootNote","ChordTypeSelect","changeChordType","Pads","numberOfPads","currentChord","pads","notes","teoria","scale","_loop","note","i","activeClass","name","forEach","noteOfCurrentChord","chroma","accidental","push","length","sortedPads","Array","from","pad","index","CollectionActions","onClick","addChordToCollection","Link","to","collection","join","disabled","clearChordCollection","generateRandomChordCollection","Collection","window","scrollTo","gtag","location","hash","shadowValue","document","querySelectorAll","style","boxShadow","chordCollection","querySelector","html2canvas","useCORS","allowTaint","backgroundColor","then","canvas","imgData","toDataURL","link","download","href","body","appendChild","click","removeChild","chords","urlParts","split","chordsNames","pop","parseInt","chordName","chord","e","Redirect","Fragment","Clipboard","data-clipboard-text","trackClipboardCopy","component","exportAsJPG","App","_this","call","state","rootNote","chordType","bind","_assertThisInitialized","target","setState","scales","Scale","KNOWN_SCALES","scaleName","Math","floor","random","chordProgression","teoriaChordProgression","getChords","HashRouter","basename","Switch","Route","path","exact","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","getElementById","URL","process","origin","addEventListener","concat","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.efa8284d.chunk.js","sourcesContent":["import React from 'react';\n\nexport default class PadSelect extends React.Component {\n  render() {\n    return (\n      <select\n        aria-label=\"Select 12 or 16 pads\"\n        value={this.props.value}\n        className=\"form-control\"\n        onChange={this.props.changeNumberOfPads}>\n        <option value=\"16\">16 pads</option>\n        <option value=\"12\">12 pads</option>\n      </select>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class NoteSelect extends React.Component {\n  render() {\n    return (\n      <select\n        aria-label=\"Select a root note\"\n        value={this.props.value}\n        className=\"form-control\"\n        onChange={this.props.changeRootNote}>\n        <option value=\"C\" className=\"active\">C</option>\n        <option value=\"C#\">C# (Db)</option>\n        <option value=\"D\">D</option>\n        <option value=\"D#\">D# (Eb)</option>\n        <option value=\"E\">E</option>\n        <option value=\"F\">F</option>\n        <option value=\"F#\">F# (Gb)</option>\n        <option value=\"G\">G</option>\n        <option value=\"G#\">G# (Ab)</option>\n        <option value=\"A\">A</option>\n        <option value=\"A#\">A# (Bb)</option>\n        <option value=\"B\">B</option>\n      </select>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class ChordTypeSelect extends React.Component {\n  render() {\n    return (\n      <select\n        aria-label=\"Select a chord type\"\n        value={this.props.value}\n        className=\"form-control\"\n        onChange={this.props.changeChordType}>\n        <option value=\"\">maj</option>\n        <option value=\"maj7\">maj7</option>\n        <option value=\"maj7b5\">maj7b5</option>\n        <option value=\"maj7#5\">maj7#5</option>\n        <option value=\"min\">min</option>\n        <option value=\"min7\">min7</option>\n        <option value=\"min7b5\">min7b5</option>\n        <option value=\"min7#5\">min7#5</option>\n        <option value=\"min6\">min6</option>\n        <option value=\"mmaj7\">mmaj7</option>\n        <option value=\"6\">6</option>\n        <option value=\"7\">7</option>\n        <option value=\"7b5\">7b5</option>\n        <option value=\"7#5\">7#5</option>\n        <option value=\"7sus4\">7sus4</option>\n        <option value=\"aug\">aug</option>\n        <option value=\"dim\">dim</option>\n        <option value=\"dim7\">dim7</option>\n        <option value=\"5\">5</option>\n        <option value=\"sus2\">sus2</option>\n        <option value=\"sus4\">sus4</option>\n        <option value=\"sus2sus4\">sus2sus4</option>\n      </select>\n    );\n  }\n}\n","import React from 'react';\nimport teoria from 'teoria';\n\nexport default class Pads extends React.Component {\n  render() {\n    const numberOfPads = this.props.numberOfPads;\n    const currentChord = this.props.currentChord;\n    const pads = [];\n    let notes = teoria.scale('c', 'chromatic').notes();\n    for (let i = 0; i < 16; i++) {\n      let a = i % 12;\n      let note = notes[a];\n\n      let activeClass = '';\n      let name = '';\n      currentChord.notes().forEach(function (noteOfCurrentChord) {\n        if (note.chroma() === noteOfCurrentChord.chroma()) {\n          activeClass = 'active';\n          name = noteOfCurrentChord.name() + noteOfCurrentChord.accidental();\n        }\n      });\n      pads.push({\n        name: name,\n        chroma: note.chroma(),\n        activeClass: activeClass,\n      });\n      if (12 === numberOfPads && 0 === (i + 1) % 3) {\n        pads.push({});\n      }\n      if (16 === pads.length) {\n        break;\n      }\n    }\n    let sortedPads = [\n      pads[12], pads[13], pads[14], pads[15],\n      pads[8], pads[9], pads[10], pads[11],\n      pads[4], pads[5], pads[6], pads[7],\n      pads[0], pads[1], pads[2], pads[3],\n    ];\n\n    return (\n      <div className={'row pads pads-' + numberOfPads}>\n        {Array.from(sortedPads, (pad, index) =>\n          <div className={'col col-3 pad-container'} key={index}>\n            <div className=\"embed-responsive embed-responsive-1by1 text-center\">\n              <div className={'embed-responsive-item pad ' + pad.activeClass}>\n                <span className=\"pad-name align-middle\">\n                  {pad.name}\n                </span>\n              </div>\n            </div>\n          </div>,\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default class CollectionActions extends React.Component {\n  render() {\n    return (\n      <div className=\"row\">\n        <div className=\"col col-12\">\n          <button\n            className=\"btn btn-block text-left\"\n            onClick={this.props.addChordToCollection}>\n            Add chord to collection\n          </button>\n          <Link to={'/collection/' + this.props.numberOfPads + '/' + this.props.collection.join('-')}>\n            <button\n              className='btn btn-block text-left'\n              disabled={0 === this.props.collection.length}>\n              Show chord-collection ({this.props.collection.length})\n            </button>\n          </Link>\n          <button\n            className=\"btn btn-block text-left\"\n            disabled={0 === this.props.collection.length}\n            onClick={this.props.clearChordCollection}>\n            Clear chord-collection\n          </button>\n          <button\n            className=\"btn btn-block text-left\"\n            onClick={this.props.generateRandomChordCollection}>\n            Generate random collection\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport teoria from 'teoria';\nimport Clipboard from 'react-clipboard.js';\nimport html2canvas from 'html2canvas';\n\nimport Pads from './Pads';\n\nclass Collection extends React.Component {\n  componentDidMount() {\n    window.scrollTo(0, 0);\n    window.gtag('event', 'view', {\n      'event_category': 'showCollection',\n      'event_label': window.location.hash,\n    });\n  }\n\n  trackClipboardCopy() {\n    window.gtag('event', 'button-clicked', {\n      'event_category': 'copyCollectionToClipboard',\n      'event_label': window.location.hash,\n    });\n  }\n\n  exportAsJPG() {\n    window.gtag('event', 'button-clicked', {\n      'event_category': 'exportAsJPG',\n      'event_label': window.location.hash,\n    });\n    const pads = document.querySelectorAll('.pad');\n    const shadowValue = pads[0].style.boxShadow;\n    document.querySelectorAll('.pad').forEach((pad) => {\n      pad.style.boxShadow = 'none';\n    });\n    const chordCollection = document.querySelector('.container.collection');\n    html2canvas(chordCollection, {\n      useCORS: true,\n      allowTaint: true,\n      backgroundColor: '#3862fd',\n    })\n      .then(canvas => {\n        const imgData = canvas.toDataURL('image/jpeg', 0.5);\n        const link = document.createElement('a');\n        link.download = 'mpc-chord-collection';\n        link.href = imgData;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        document.querySelectorAll('.pad').forEach((pad) => {\n          pad.style.boxShadow = shadowValue;\n        });\n      });\n  }\n\n  render() {\n    let chords = [];\n    try {\n      let urlParts = window.location.href.split('/');\n      let chordsNames = urlParts.pop().split('-');\n      var numberOfPads = parseInt(urlParts.pop());\n      chordsNames.forEach(function (chordName) {\n        let chord = teoria.chord(chordName);\n        chords.push(chord);\n      });\n    } catch (e) {\n      return <Redirect to={'/'} />;\n    }\n    return (\n      <React.Fragment>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col col-12\">\n              <h2>MPC-Chords ({chords.length})</h2>\n            </div>\n          </div>\n          <div className=\"row actions\">\n            <div className=\"col col-12\">\n              <Link to={'/'}>\n                <button className=\"btn btn-block text-left back\">\n                  Back to the Chord-Finder-App\n                </button>\n              </Link>\n              <Clipboard\n                data-clipboard-text={window.location.href}\n                className=\"btn btn-block text-left\"\n                onClick={this.trackClipboardCopy}\n                component=\"button\">\n                Copy collection-URL to clipboard\n              </Clipboard>\n              <button className=\"btn btn-block text-left mb-0\" onClick={this.exportAsJPG}>\n                Export collection as JPG-Image\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"container collection\">\n          {Array.from(chords, (chord, index) =>\n            <div className={'chord'} key={index}>\n              <div className=\"row\">\n                <div className=\"col col-12\">\n                  <h3>{chord.name}</h3>\n                </div>\n              </div>\n              <Pads\n                key={index}\n                currentChord={chord}\n                numberOfPads={numberOfPads}\n              />\n            </div>,\n          )}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Collection;\n","import React from 'react';\nimport { Route, Switch, HashRouter, Redirect } from 'react-router-dom';\n\nimport teoria, { Scale } from 'teoria';\nimport teoriaChordProgression from 'teoria-chord-progression';\n\nimport PadSelect from './ChordFinder/PadSelect';\nimport NoteSelect from './ChordFinder/NoteSelect';\nimport ChordTypeSelect from './ChordFinder/ChordTypeSelect';\nimport Pads from './ChordFinder/Pads';\nimport CollectionActions from './ChordFinder/CollectionActions';\nimport Collection from './ChordFinder/Collection';\n\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      numberOfPads: 16,\n      rootNote: 'C',\n      chordType: '',\n      collection: [],\n    };\n    this.changeNumberOfPads = this.changeNumberOfPads.bind(this);\n    this.changeRootNote = this.changeRootNote.bind(this);\n    this.changeChordType = this.changeChordType.bind(this);\n    this.addChordToCollection = this.addChordToCollection.bind(this);\n    this.clearChordCollection = this.clearChordCollection.bind(this);\n    this.generateRandomChordCollection = this.generateRandomChordCollection.bind(this);\n  }\n\n  changeNumberOfPads(e) {\n    window.gtag('event', 'select-changed', {\n      'event_category': 'changeNumberOfPads',\n      'event_label': e.target.value,\n    });\n    this.setState({ numberOfPads: parseInt(e.target.value) });\n  }\n\n  changeRootNote(e) {\n    window.gtag('event', 'select-changed', {\n      'event_category': 'changeRootNote',\n      'event_label': e.target.value,\n    });\n    this.setState({ rootNote: e.target.value });\n  }\n\n  changeChordType(e) {\n    window.gtag('event', 'select-changed', {\n      'event_category': 'changeChordType',\n      'event_label': e.target.value,\n    });\n    this.setState({ chordType: e.target.value });\n  }\n\n  addChordToCollection() {\n    window.gtag('event', 'button-clicked', {\n      'event_category': 'addChordToCollection',\n      'event_label': this.state.rootNote + this.state.chordType,\n    });\n    this.state.collection.push(this.state.rootNote + this.state.chordType);\n    this.setState({ collection: this.state.collection });\n  }\n\n  clearChordCollection() {\n    window.gtag('event', 'button-clicked', {\n      'event_category': 'clearChordCollection',\n    });\n    this.setState({ collection: [] });\n  }\n\n  generateRandomChordCollection() {\n    try {\n      const scales = Scale.KNOWN_SCALES;\n      const scaleName = scales[Math.floor(Math.random() * scales.length)];\n      const notes = teoria.scale('c', 'chromatic').notes();\n      const note = notes[Math.floor(Math.random() * notes.length)];\n      const scale = teoria.scale(note.name(), scaleName);\n      const chordProgression = teoriaChordProgression(scale, [2, 5, 1], 4);\n      let collection = [];\n      chordProgression.getChords().forEach((chord) => {\n        collection.push(chord.name);\n      });\n      window.gtag('event', 'button-clicked', {\n        'event_category': 'generateRandomChordCollection',\n        'event_label': collection.join('-'),\n      });\n      this.setState({ collection });\n    } catch (e) {\n      //just keep on trying\n      this.generateRandomChordCollection();\n    }\n  }\n\n  render() {\n    const currentChord = teoria.chord(this.state.rootNote + this.state.chordType);\n    const numberOfPads = this.state.numberOfPads;\n    const collection = this.state.collection;\n    return (\n      <HashRouter basename='/'>\n        <Switch>\n          <Route path={'/collection/:pads/:chords'} exact component={Collection} />\n          <Route path={'/'} exact>\n            <div className=\"App\">\n              <div className=\"container\">\n                <div className=\"row\">\n                  <div className=\"col col-12\">\n                    <h2>MPC-Chord-Finder</h2>\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col col-12\">\n                    <PadSelect changeNumberOfPads={this.changeNumberOfPads} value={this.state.numberOfPads} />\n                    <NoteSelect changeRootNote={this.changeRootNote} value={this.state.rootNote} />\n                    <ChordTypeSelect changeChordType={this.changeChordType} value={this.state.chordType} />\n                  </div>\n                </div>\n              </div>\n              <div className=\"container pads\">\n                <Pads\n                  numberOfPads={numberOfPads}\n                  currentChord={currentChord}>\n                </Pads>\n              </div>\n              <div className=\"container\">\n                <p></p>\n                <CollectionActions\n                  addChordToCollection={this.addChordToCollection}\n                  clearChordCollection={this.clearChordCollection}\n                  generateRandomChordCollection={this.generateRandomChordCollection}\n                  numberOfPads={numberOfPads}\n                  collection={collection}>\n                </CollectionActions>\n              </div>\n            </div>\n          </Route>\n          <Route path=\"*\">\n            <Redirect to={'/'} />\n          </Route>\n        </Switch>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}